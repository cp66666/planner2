#ifndef __MESSAGE_DOC_H__
#define __MESSAGE_DOC_H__

#include <iostream>
#include <vector>
#include <queue>
#include <stack>
#include <opencv2/opencv.hpp>
#include <time.h>
#include <chrono>

#include "rapidjson/document.h"
#include "rapidjson/writer.h"
#include "rapidjson/stringbuffer.h"
#include "rapidjson/filewritestream.h"
#include "rapidjson/prettywriter.h"
#include "rapidjson/filereadstream.h"

using namespace rapidjson;

class MessageParser
{
public:
    MessageParser();
    ~MessageParser();

    /**
     * @brief Get the string of msg sent to robotcomm for controlling and reporting status.
     * 
     * @param optype 
     * - "charge_stop": Tell robotcomm stop charging for the situation that robot is charging when receives tasks.
     * - "charge_begin": Tell robotcomm begin charging when the "goto_charge" task is well done.
     * - "normal": Robot is running on the way.
     * @param v Velocity to robotcomm for controlling.
     * @param omega Omega to robotcomm for controlling.
     * @param status The status in main iteration.
     * 
     * @return A json string generated by rapidjson.
     */
    std::string GetRobotcommMsgStr(std::string optype, float v, float omega, std::string status_str, std::string extra_str);
};

#endif//__MESSAGE_DOC_H__